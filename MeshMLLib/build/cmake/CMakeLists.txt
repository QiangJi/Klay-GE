PROJECT(MeshMLLib)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(MESHMLLIB_MAJOR_VERSION 1)
SET(MESHMLLIB_MINOR_VERSION 0)
SET(MESHMLLIB_PATCH_VERSION 0)
SET(MESHMLLIB_VERSION ${MESHMLLIB_MAJOR_VERSION}.${MESHMLLIB_MINOR_VERSION}.${MESHMLLIB_PATCH_VERSION})

OPTION(KLAYGE_WITH_WINRT "WinRT support." FALSE)

SET(MESHML_PROJECT_DIR "${CMAKE_HOME_DIRECTORY}/../..")

INCLUDE(${MESHML_PROJECT_DIR}/../cmake/Common.cmake)
INCLUDE(${MESHML_PROJECT_DIR}/../cmake/Platform.cmake)
INCLUDE(${MESHML_PROJECT_DIR}/../cmake/Compiler.cmake)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET(MESHMLLIB_OUTPUT_DIR "${MESHML_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME}")


# The project settings

SET(LIB_NAME MeshMLLib)

SET(MESHMLLIB_SOURCE_FILES
	${MESHML_PROJECT_DIR}/src/MeshMLLib.cpp
)
SET(MESHMLLIB_HEADER_FILES
	${MESHML_PROJECT_DIR}/include/MeshMLLib/MeshMLLib.hpp
)
SOURCE_GROUP("Source Files" FILES ${MESHMLLIB_SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${MESHMLLIB_HEADER_FILES})

ADD_DEFINITIONS(-DMESHMLLIB_SOURCE)
IF(KLAYGE_WITH_WINRT)
	ADD_DEFINITIONS(-ZW)
ENDIF()

INCLUDE_DIRECTORIES(${MESHML_PROJECT_DIR}/../External/boost)
INCLUDE_DIRECTORIES(${MESHML_PROJECT_DIR}/../KFL/include)
INCLUDE_DIRECTORIES(${MESHML_PROJECT_DIR}/include)
LINK_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/../../../External/boost/lib_${KLAYGE_COMPILER_NAME}${KLAYGE_COMPILER_VERSION}_${KLAYGE_ARCH_NAME}/lib)
ADD_LIBRARY(${LIB_NAME} STATIC
	${MESHMLLIB_SOURCE_FILES} ${MESHMLLIB_HEADER_FILES}
)

SET(LIB_OUTPUT_NAME ${LIB_NAME}_${KLAYGE_COMPILER_NAME}_${KLAYGE_ARCH_NAME})

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${MESHMLLIB_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${MESHMLLIB_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${MESHMLLIB_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${MESHMLLIB_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${MESHMLLIB_OUTPUT_DIR}
	PROJECT_LABEL ${LIB_NAME}
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME ${LIB_OUTPUT_NAME}
)
IF(KLAYGE_WITH_WINRT)
	SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES VS_WINRT_EXTENSIONS TRUE)
ENDIF()

TARGET_LINK_LIBRARIES(${LIB_NAME})
