PROJECT(Tools)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

FIND_PATH(KLAYGE_PROJECT_DIR klayge_logo.ico PATHS ../../../)

INCLUDE(${KLAYGE_PROJECT_DIR}/../cmake/Common.cmake)
INCLUDE(${KLAYGE_PROJECT_DIR}/../cmake/Platform.cmake)
INCLUDE(${KLAYGE_PROJECT_DIR}/../cmake/Compiler.cmake)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

# Main settings and dependencies
SET(KLAYGE_CORELIB_NAME KlayGE_Core)  # Dependency of all other targets

SET(KLAYGE_OUTPUT_DIR "${KLAYGE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME}")
SET(KLAYGE_BIN_DIR "${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}")


# Required variables:
# - SOURCE_FILES/HEADER_FILES/RESOURCE_FILES
# - EFFECT_FILES/POST_PROCESSORS/UI_FILES
# - EXTRA_INCLUDE_DIRS: dependencies required besides KlayGE_Core and boost
# - EXTRA_LINKED_LIBRARIES: dependencies required besides KlayGE_Core and boost
#
MACRO(SETUP_TOOL EXE_NAME)
	SET(RESOURCE_FILES
		${KLAYGE_PROJECT_DIR}/Tools/media/Common/KlayGETool.rc
		${KLAYGE_PROJECT_DIR}/klayge_logo.ico
	)

	SOURCE_GROUP("Source Files" FILES ${SOURCE_FILES})
	SOURCE_GROUP("Header Files" FILES ${HEADER_FILES})
	SOURCE_GROUP("Resource Files" FILES ${RESOURCE_FILES})
	SOURCE_GROUP("Effect Files" FILES ${EFFECT_FILES})
	SOURCE_GROUP("Post Processors" FILES ${POST_PROCESSORS})
	SOURCE_GROUP("UI Files" FILES ${UI_FILES})

	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/boost)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/include)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Core/Include)
	INCLUDE_DIRECTORIES(${EXTRA_INCLUDE_DIRS})
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/boost/lib_${KLAYGE_COMPILER_NAME}${KLAYGE_COMPILER_VERSION}_${KLAYGE_ARCH_NAME}/lib)
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/lib/${KLAYGE_PLATFORM_NAME})
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME})
	LINK_DIRECTORIES(${EXTRA_LINKED_DIRS})

	ADD_EXECUTABLE(${EXE_NAME} ${SOURCE_FILES} ${HEADER_FILES} ${RESOURCE_FILES} )
	ADD_DEPENDENCIES(${EXE_NAME} ${KLAYGE_CORELIB_NAME})

	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES
		PROJECT_LABEL ${EXE_NAME}
		DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
		OUTPUT_NAME ${EXE_NAME}
	)

	IF(MSVC)
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES})
	ELSE()
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
			debug KlayGE_Core_${KLAYGE_COMPILER_NAME}_d optimized KlayGE_Core_${KLAYGE_COMPILER_NAME}
			debug KFL_${KLAYGE_COMPILER_NAME}_${KLAYGE_ARCH_NAME}_d optimized KFL_${KLAYGE_COMPILER_NAME}_${KLAYGE_ARCH_NAME}
			debug boost_chrono-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-d-${BOOST_VER} optimized boost_chrono-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-${BOOST_VER}
			debug boost_thread-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-d-${BOOST_VER} optimized boost_thread-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-${BOOST_VER}
			debug boost_system-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-d-${BOOST_VER} optimized boost_system-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-${BOOST_VER})
	ENDIF()

	TARGET_LINK_LIBRARIES(${EXE_NAME} ${EXTRA_LINKED_LIBRARIES})


	ADD_POST_BUILD(${EXE_NAME} "")

	INSTALL(TARGETS ${EXE_NAME}
		RUNTIME DESTINATION ${KLAYGE_BIN_DIR}
		LIBRARY DESTINATION ${KLAYGE_BIN_DIR}
		ARCHIVE DESTINATION ${KLAYGE_OUTPUT_DIR}
	)

	IF(MSVC)
		CREATE_VCPROJ_USERFILE(${EXE_NAME})
	ENDIF()
ENDMACRO(SETUP_TOOL)

ADD_SUBDIRECTORY(Bump2Normal)
ADD_SUBDIRECTORY(ColorGradingTexGen)
ADD_SUBDIRECTORY(DistanceMapCreator)
ADD_SUBDIRECTORY(FFTLensEffectsGen)
ADD_SUBDIRECTORY(ForceTexSRGB)
ADD_SUBDIRECTORY(FXML2Shader)
ADD_SUBDIRECTORY(FXMLJIT)
ADD_SUBDIRECTORY(GLCompatibility)
ADD_SUBDIRECTORY(GLESCompatibility)
ADD_SUBDIRECTORY(HDRCompressor)
ADD_SUBDIRECTORY(JudaTexPacker)
ADD_SUBDIRECTORY(KFontGen)
ADD_SUBDIRECTORY(MeshMLJIT)
ADD_SUBDIRECTORY(Mipmapper)
ADD_SUBDIRECTORY(NoiseTexGen)
ADD_SUBDIRECTORY(NormalMapCompressor)
ADD_SUBDIRECTORY(Normal2NaLength)
ADD_SUBDIRECTORY(Normal2Height)
ADD_SUBDIRECTORY(NormalMapGen)
ADD_SUBDIRECTORY(NormalsFittingGen)
ADD_SUBDIRECTORY(PlatformDeployer)
ADD_SUBDIRECTORY(Tex2JTML)
ADD_SUBDIRECTORY(TexCompressor)
