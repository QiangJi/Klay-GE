<?xml version='1.0'?>

<effect>
	<include name="util.fxml"/>

	<parameter type="float4x4" name="inv_mvp"/>
	<parameter type="float" name="depth_far"/>
	<parameter type="int" name="skybox_compressed"/>
	<parameter type="textureCUBE" name="skybox_tex"/>
	<parameter type="textureCUBE" name="skybox_C_tex"/>
	<parameter type="sampler" name="skybox_sampler">
		<state name="filtering" value="min_mag_linear_mip_point"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
		<state name="address_w" value="clamp"/>
	</parameter>

	<shader>
		<![CDATA[
void GBufferSkyBoxVS(float4 pos : POSITION,
			out float4 oPos : SV_Position)
{
	oPos = pos;
}

float4 DepthSkyBoxPS() : SV_Target
{
	return depth_far;
}

float4 GBufferSkyBoxRT0PS() : SV_Target
{
	return 0;
}

float4 GBufferSkyBoxRT1PS() : SV_Target
{
	return 0;
}

void GBufferSkyBoxMRTPS(out float4 mrt_0 : SV_Target0, out float4 mrt_1 : SV_Target1)
{
	mrt_0 = mrt_1 = 0;
}

void SkyBoxVS(float4 pos : POSITION,
			out float3 texcoord0 : TEXCOORD0,
			out float4 oPos : SV_Position)
{
	oPos = pos;
	texcoord0 = mul(pos, inv_mvp).xyz;
}

float4 SkyBoxPS(float3 texCoord0 : TEXCOORD0) : SV_Target
{
	if (skybox_compressed)
	{
		return decode_hdr_yc(skybox_tex.Sample(skybox_sampler, texCoord0).r,
					skybox_C_tex.Sample(skybox_sampler, texCoord0));
	}
	else
	{
		return skybox_tex.Sample(skybox_sampler, texCoord0);
	}
}
		]]>
	</shader>

	<technique name="DepthSkyBoxTech">
		<pass name="p0">
			<state name="cull_mode" value="none"/>
			<state name="depth_func" value="equal"/>
			<state name="depth_write_mask" value="false"/>

			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="GBufferSkyBoxVS()"/>
			<state name="pixel_shader" value="DepthSkyBoxPS()"/>
		</pass>
	</technique>

	<technique name="GBufferSkyBoxRT0Tech">
		<pass name="p0">
			<state name="cull_mode" value="none"/>
			<state name="depth_func" value="equal"/>
			<state name="depth_write_mask" value="false"/>

			<state name="color_write_mask" value="0"/>

			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="GBufferSkyBoxVS()"/>
			<state name="pixel_shader" value="GBufferSkyBoxRT0PS()"/>
		</pass>
	</technique>

	<technique name="GBufferSkyBoxRT1Tech">
		<pass name="p0">
			<state name="cull_mode" value="none"/>
			<state name="depth_func" value="equal"/>
			<state name="depth_write_mask" value="false"/>

			<state name="color_write_mask" value="0"/>

			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="GBufferSkyBoxVS()"/>
			<state name="pixel_shader" value="GBufferSkyBoxRT1PS()"/>
		</pass>
	</technique>

	<technique name="GBufferSkyBoxMRTTech" inherit="GBufferSkyBoxRT0Tech">
		<pass name="p0">
			<state name="color_write_mask" index="0" value="0"/>
			<state name="color_write_mask" index="1" value="0"/>
			
			<state name="pixel_shader" value="GBufferSkyBoxMRTPS()"/>
		</pass>
	</technique>
	
	<technique name="SkyBoxTech">
		<pass name="p0">
			<state name="cull_mode" value="none"/>
			<state name="depth_write_mask" value="0"/>
			<state name="depth_func" value="equal"/>

			<state name="vertex_shader" value="SkyBoxVS()"/>
			<state name="pixel_shader" value="SkyBoxPS()"/>
		</pass>
	</technique>
</effect>
