<?xml version='1.0'?>

<effect>	
	<parameter type="float4x4" name="mvp"/>
	<parameter type="float4" name="color"/>

	<parameter type="float3" name="pos_center"/>
	<parameter type="float3" name="pos_extent"/>

	<parameter type="float3" name="v0"/>
	<parameter type="float3" name="v1"/>
	<parameter type="float3" name="v2"/>
	<parameter type="float3" name="v3"/>
	<parameter type="float3" name="v4"/>
	<parameter type="float3" name="v5"/>
	<parameter type="float3" name="v6"/>
	<parameter type="float3" name="v7"/>

	<shader>
		<![CDATA[
void PrimitiveVS(float p : POSITION,
			out float4 oPosition : SV_Position)
{
	float3 pos;
	if (p < 0.5f)
	{
		pos = v0;
	}
	else if (p < 1.5f)
	{
		pos = v1;
	}
	else if (p < 2.5f)
	{
		pos = v2;
	}
	else if (p < 3.5f)
	{
		pos = v3;
	}
	else if (p < 4.5f)
	{
		pos = v4;
	}
	else if (p < 5.5f)
	{
		pos = v5;
	}
	else if (p < 6.5f)
	{
		pos = v6;
	}
	else
	{
		pos = v7;
	}
	oPosition = mul(float4(pos, 1), mvp);
}

void PrimitiveDeferredVS(float p : POSITION,
				out float4 oClr	: COLOR0,
				out float4 oPos : SV_Position)
{
	float3 pos;
	if (p < 0.5f)
	{
		pos = v0;
	}
	else if (p < 1.5f)
	{
		pos = v1;
	}
	else if (p < 2.5f)
	{
		pos = v2;
	}
	else if (p < 3.5f)
	{
		pos = v3;
	}
	else if (p < 4.5f)
	{
		pos = v4;
	}
	else if (p < 5.5f)
	{
		pos = v5;
	}
	else if (p < 6.5f)
	{
		pos = v6;
	}
	else
	{
		pos = v7;
	}
	oPos = mul(float4(pos.xyz, 1), mvp);
	oClr = color;
}

void PrimitiveDeferredDepthVS(float p : POSITION,
				out float oDepth : TEXCOORD0,
				out float4 oPos : SV_Position)
{
	float3 pos;
	if (p < 0.5f)
	{
		pos = v0;
	}
	else if (p < 1.5f)
	{
		pos = v1;
	}
	else if (p < 2.5f)
	{
		pos = v2;
	}
	else if (p < 3.5f)
	{
		pos = v3;
	}
	else if (p < 4.5f)
	{
		pos = v4;
	}
	else if (p < 5.5f)
	{
		pos = v5;
	}
	else if (p < 6.5f)
	{
		pos = v6;
	}
	else
	{
		pos = v7;
	}
	oPos = mul(float4(pos.xyz, 1), mvp);
	oDepth = oPos.w;
}

float4 PrimitiveDeferredRT0PS() : SV_Target
{
	return 0;
}

float4 PrimitiveDeferredRT1PS(float4 clr : COLOR0) : SV_Target
{
	return clr;
}

float4 PrimitiveDeferredDepthPS(float depth : TEXCOORD0) : SV_Target
{
	return depth;
}

void PrimitiveDeferredMRTPS(float4 clr : COLOR0,
	out float4 mrt_0 : SV_Target0, out float4 mrt_1 : SV_Target1)
{
	mrt_0 = 0;
	mrt_1 = clr;
}

void HelperVS(float4 position : POSITION,
			out float4 oPosition : SV_Position)
{
	position = float4(position.xyz * pos_extent + pos_center, 1);
	oPosition = mul(position, mvp);
}

float4 HelperPS() : SV_Target0
{
	return color;
}
		]]>
	</shader>
	
	<technique name="PointTec">
		<pass name="p0">
			<state name="polygon_mode" value="point"/>
			<state name="cull_mode" value="none"/>

			<state name="vertex_shader" value="PrimitiveVS()"/>
			<state name="pixel_shader" value="HelperPS()"/>
		</pass>
	</technique>

	<technique name="PointDepthTec">
		<pass name="p0">
			<state name="polygon_mode" value="point"/>
			<state name="cull_mode" value="none"/>
			
			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="PrimitiveDeferredVS()"/>
			<state name="pixel_shader" value="PrimitiveDeferredDepthPS()"/>
		</pass>
	</technique>

	<technique name="PointRT0Tech">
		<pass name="p0">
			<state name="polygon_mode" value="point"/>
			<state name="cull_mode" value="none"/>
			
			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="PrimitiveDeferredVS()"/>
			<state name="pixel_shader" value="PrimitiveDeferredRT0PS()"/>
		</pass>
	</technique>

	<technique name="PointRT1Tech">
		<pass name="p0">
			<state name="polygon_mode" value="point"/>
			<state name="cull_mode" value="none"/>
			
			<state name="depth_func" value="equal"/>
			<state name="depth_write_mask" value="false"/>

			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="PrimitiveDeferredVS()"/>
			<state name="pixel_shader" value="PrimitiveDeferredRT1PS()"/>
		</pass>
	</technique>

	<technique name="PointMRTTech">
		<pass name="p0">
			<state name="polygon_mode" value="point"/>
			<state name="cull_mode" value="none"/>
			
			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="PrimitiveDeferredVS()"/>
			<state name="pixel_shader" value="PrimitiveDeferredMRTPS()"/>
		</pass>
	</technique>

	<technique name="LineTec">
		<pass name="p0">
			<state name="polygon_mode" value="line"/>
			<state name="cull_mode" value="none"/>

			<state name="vertex_shader" value="PrimitiveVS()"/>
			<state name="pixel_shader" value="HelperPS()"/>
		</pass>
	</technique>

	<technique name="LineDepthTec">
		<pass name="p0">
			<state name="polygon_mode" value="line"/>
			<state name="cull_mode" value="none"/>

			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="PrimitiveDeferredVS()"/>
			<state name="pixel_shader" value="PrimitiveDeferredDepthPS()"/>
		</pass>
	</technique>

	<technique name="LineRT0Tech">
		<pass name="p0">
			<state name="polygon_mode" value="line"/>
			<state name="cull_mode" value="none"/>

			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="PrimitiveDeferredVS()"/>
			<state name="pixel_shader" value="PrimitiveDeferredRT0PS()"/>
		</pass>
	</technique>

	<technique name="LineRT1Tech">
		<pass name="p0">
			<state name="polygon_mode" value="line"/>
			<state name="cull_mode" value="none"/>

			<state name="depth_func" value="equal"/>
			<state name="depth_write_mask" value="false"/>

			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="PrimitiveDeferredVS()"/>
			<state name="pixel_shader" value="PrimitiveDeferredRT1PS()"/>
		</pass>
	</technique>

	<technique name="LineMRTTech">
		<pass name="p0">
			<state name="polygon_mode" value="line"/>
			<state name="cull_mode" value="none"/>

			<state name="front_stencil_enable" value="true"/>
			<state name="front_stencil_func" value="always_pass"/>
			<state name="front_stencil_ref" value="128"/>
			<state name="front_stencil_pass" value="replace"/>
			<state name="back_stencil_enable" value="true"/>
			<state name="back_stencil_func" value="always_pass"/>
			<state name="back_stencil_ref" value="128"/>
			<state name="back_stencil_pass" value="replace"/>

			<state name="vertex_shader" value="PrimitiveDeferredVS()"/>
			<state name="pixel_shader" value="PrimitiveDeferredMRTPS()"/>
		</pass>
	</technique>

	<technique name="HelperTec">
		<pass name="p0">
			<state name="polygon_mode" value="line"/>
			<state name="cull_mode" value="none"/>

			<state name="vertex_shader" value="HelperVS()"/>
			<state name="pixel_shader" value="HelperPS()"/>
		</pass>
	</technique>
</effect>
