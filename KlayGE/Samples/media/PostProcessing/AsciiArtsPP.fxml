<?xml version='1.0'?>

<effect>
	<include name="PostProcess.fxml"/>

	<parameter type="texture2D" name="src_tex"/>
	<parameter type="sampler" name="src_sampler">
		<state name="filtering" value="min_mag_mip_point"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
	</parameter>

	<parameter type="texture2D" name="lums_tex"/>
	<parameter type="sampler" name="lums_sampler">
		<state name="filtering" value="min_mag_linear_mip_point"/>
		<state name="address_u" value="clamp"/>
		<state name="address_v" value="clamp"/>
	</parameter>

	<cbuffer name="per_frame">
		<parameter type="float2" name="cell_per_row_line"/>
	</cbuffer>

	<shader>
		<![CDATA[
float4 AsciiArtsPS(float2 tex_coord0 : TEXCOORD0) : SV_Target
{
	const float3 RGB_TO_LUM = float3(0.2126f, 0.7152f, 0.0722f);
	float lum = saturate(dot(src_tex.SampleLevel(src_sampler, tex_coord0, 3).rgb, RGB_TO_LUM));
	float2 t = float2(floor(lum * 31) / 32, 0) + frac(tex_coord0 / cell_per_row_line) / float2(32, 1);
	return lum * lums_tex.Sample(lums_sampler, t).r;
}
		]]>
	</shader>

	<technique name="AsciiArts">
		<pass name="p0">
			<state name="depth_enable" value="false"/>
			<state name="depth_write_mask" value="false"/>

			<state name="vertex_shader" value="PostProcessVS()"/>
			<state name="pixel_shader" value="AsciiArtsPS()"/>
		</pass>
	</technique>
</effect>