<?xml version='1.0'?>

<scene name="Deferred Rendering">
	<light type="point" name="point">
		<position x="2" y="10" z="0"/>
		<color x="25.6" y="30.72" z="32"/>
		<fall_off x="1" y="0" z="1"/>
		<proxy scale="0.1"/>
		<projective name="../ShadowCubeMap/lamp.dds"/>
		<update>
			<![CDATA[
def update(app_time, elapsed_time):
	return (mul(mul(rotation_z(0.4), rotation_y(app_time / 1.4)), translation(sin(app_time) + 2, 10, 0)).vec, );
			]]>
		</update>
	</light>	
	<light type="spot" name="red spot">
		<position x="0" y="4" z="0"/>
		<direction x="1" y="0" z="0"/>
		<color x="64" y="0" z="0"/>
		<fall_off x="1" y="0" z="1"/>
		<angle outer="0.523599" inner="0.392699"/>
		<proxy scale="0.1"/>
		<update>
			<![CDATA[
def update(app_time, elapsed_time):
	cone_radius = sqrt(3) / 3;
	return (mul(mul(mul(scaling(cone_radius, cone_radius, 1), rotation_x(pi)), rotation_y(app_time * 1000 / 1400)), translation(0, 4, 0)).vec, );
			]]>
		</update>
	</light>
	<light type="spot" name="green spot">
		<position x="0" y="3.4" z="0"/>
		<direction x="-1" y="0" z="0"/>
		<color x="0" y="64" z="0"/>
		<fall_off x="1" y="0" z="1"/>
		<angle outer="0.785398" inner="0.523599"/>
		<proxy scale="0.1"/>
		<update>
			<![CDATA[
def update(app_time, elapsed_time):
	cone_radius = 1;
	return (mul(mul(mul(scaling(cone_radius, cone_radius, 1), rotation_x(0)), rotation_y(-app_time * 1000 / 700)), translation(0, 3.4, 0)).vec, );
			]]>
		</update>
	</light>
	<light type="spot" name="gi">
		<attribute value="indirect"/>
		<position x="0" y="16" z="-4.8"/>
		<direction x="0" y="0" z="1"/>
		<color x="192" y="188.16" z="140.16"/>
		<fall_off x="1" y="0" z="1"/>
		<angle outer="0.523599" inner="0.392699"/>
		<proxy scale="0.1"/>
		<update>
			<![CDATA[
def update(app_time, elapsed_time):
	cone_radius = sqrt(3) / 3;
	return (mul(mul(mul(scaling(cone_radius, cone_radius, 1), rotation_x(pi * 0.13)), rotation_y(sin(app_time * 1000 / 2800) * pi / 6)), translation(0, 16, -4.8)).vec, );
			]]>
		</update>
	</light>

	<model name="sponza_crytek.7z//sponza_crytek.meshml"/>

	<skybox y_cube="Lake_CraterLake03_y.dds" c_cube="Lake_CraterLake03_c.dds"/>

	<camera x="-14.5" y="18" z="-3">
		<look_at x="-13.6" y="17.55" z="-2.8"/>
		<near_plane value="0.1"/>
		<far_plane value="500"/>
	</camera>
</scene>
