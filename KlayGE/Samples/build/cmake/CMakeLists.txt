PROJECT(Samples)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

OPTION(KLAYGE_WITH_WINRT "WinRT support." FALSE)

FIND_PATH(KLAYGE_PROJECT_DIR klayge_logo.ico PATHS ../../../)

INCLUDE(${KLAYGE_PROJECT_DIR}/../cmake/Common.cmake)
INCLUDE(${KLAYGE_PROJECT_DIR}/../cmake/Platform.cmake)
INCLUDE(${KLAYGE_PROJECT_DIR}/../cmake/Compiler.cmake)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

# Main settings and dependencies
SET(KLAYGE_CORELIB_NAME KlayGE_Core)  # Dependency of all other targets

SET(KLAYGE_OUTPUT_DIR "${KLAYGE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME}")
SET(KLAYGE_BIN_DIR "${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}")


# Required variables:
# - SOURCE_FILES/HEADER_FILES/RESOURCE_FILES
# - EFFECT_FILES/POST_PROCESSORS/UI_FILES
# - EXTRA_INCLUDE_DIRS: dependencies required besides KlayGE_Core and boost
# - EXTRA_LINKED_LIBRARIES: dependencies required besides KlayGE_Core and boost
#
MACRO(SETUP_SAMPLE EXE_NAME)
	SOURCE_GROUP("Source Files" FILES ${SOURCE_FILES})
	SOURCE_GROUP("Header Files" FILES ${HEADER_FILES})
	SOURCE_GROUP("Resource Files" FILES ${RESOURCE_FILES})
	SOURCE_GROUP("Effect Files" FILES ${EFFECT_FILES})
	SOURCE_GROUP("Post Processors" FILES ${POST_PROCESSORS})
	SOURCE_GROUP("UI Files" FILES ${UI_FILES})

	IF(KLAYGE_WITH_WINRT)
		ADD_DEFINITIONS(-ZW)
	ENDIF()

	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/boost)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/include)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Core/Include)
	INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Samples/src/Common)
	INCLUDE_DIRECTORIES(${EXTRA_INCLUDE_DIRS})
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/boost/lib_${KLAYGE_COMPILER_NAME}${KLAYGE_COMPILER_VERSION}_${KLAYGE_ARCH_NAME}/lib)
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/lib/${KLAYGE_PLATFORM_NAME})
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME})
	LINK_DIRECTORIES(${EXTRA_LINKED_DIRS})

	ADD_EXECUTABLE(${EXE_NAME} ${SOURCE_FILES} ${HEADER_FILES} ${RESOURCE_FILES} ${EFFECT_FILES} ${POST_PROCESSORS} ${UI_FILES})
	ADD_DEPENDENCIES(${EXE_NAME} ${KLAYGE_CORELIB_NAME})

	SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES
		PROJECT_LABEL ${EXE_NAME}
		DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
		OUTPUT_NAME ${EXE_NAME}
	)
	IF(KLAYGE_WITH_WINRT)
		SET_TARGET_PROPERTIES(${EXE_NAME} PROPERTIES VS_WINRT_EXTENSIONS TRUE)
	ENDIF()

	IF(MSVC)
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES})
	ELSE()
		SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
			debug KlayGE_Core_${KLAYGE_COMPILER_NAME}_d optimized KlayGE_Core_${KLAYGE_COMPILER_NAME}
			debug KFL_${KLAYGE_COMPILER_NAME}_${KLAYGE_ARCH_NAME}_d optimized KFL_${KLAYGE_COMPILER_NAME}_${KLAYGE_ARCH_NAME}
			debug boost_chrono-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-d-${BOOST_VER} optimized boost_chrono-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-${BOOST_VER}
			debug boost_thread-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-d-${BOOST_VER} optimized boost_thread-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-${BOOST_VER}
			debug boost_system-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-d-${BOOST_VER} optimized boost_system-${KLAYGE_COMPILER_NAME}${GCC_VER}-mt-${BOOST_VER})
	ENDIF()

	TARGET_LINK_LIBRARIES(${EXE_NAME} ${EXTRA_LINKED_LIBRARIES})

	IF(NOT KLAYGE_WITH_WINRT)
		ADD_POST_BUILD(${EXE_NAME} "")
 
		INSTALL(TARGETS ${EXE_NAME}
			RUNTIME DESTINATION ${KLAYGE_BIN_DIR}
			LIBRARY DESTINATION ${KLAYGE_BIN_DIR}
			ARCHIVE DESTINATION ${KLAYGE_OUTPUT_DIR}
		)

		IF(MSVC)
			CREATE_VCPROJ_USERFILE(${EXE_NAME})
		ENDIF()
	ENDIF()
ENDMACRO(SETUP_SAMPLE)

ADD_SUBDIRECTORY(Common)
IF(NOT KLAYGE_WITH_WINRT)
ADD_SUBDIRECTORY(AtmosphericScattering)
ADD_SUBDIRECTORY(CascadedShadowMap)
ADD_SUBDIRECTORY(CausticsMap)
ADD_SUBDIRECTORY(DeferredRendering)
ADD_SUBDIRECTORY(DetailedSurface)
ADD_SUBDIRECTORY(GlobalIllumination)
ADD_SUBDIRECTORY(GPUParticleSystem)
ADD_SUBDIRECTORY(JudaTexViewer)
ADD_SUBDIRECTORY(ModelViewer)
ADD_SUBDIRECTORY(MotionBlurDoF)
ADD_SUBDIRECTORY(Ocean)
ADD_SUBDIRECTORY(OrderIndependentTransparency)
ADD_SUBDIRECTORY(ParticleEditor)
ADD_SUBDIRECTORY(PostProcessing)
ADD_SUBDIRECTORY(ProceduralTex)
ADD_SUBDIRECTORY(Reflection)
ADD_SUBDIRECTORY(ScenePlayer)
ADD_SUBDIRECTORY(ShadowCubemap)
ADD_SUBDIRECTORY(SubSurface)
ENDIF()
ADD_SUBDIRECTORY(Text)
IF(NOT KLAYGE_WITH_WINRT)
ADD_SUBDIRECTORY(VideoTexture)
ENDIF()
