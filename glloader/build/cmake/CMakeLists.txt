PROJECT(glloader)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(GLLOADER_MAJOR_VERSION 4)
SET(GLLOADER_MINOR_VERSION 0)
SET(GLLOADER_PATCH_VERSION 0)
SET(GLLOADER_VERSION ${GLLOADER_MAJOR_VERSION}.${GLLOADER_MINOR_VERSION}.${GLLOADER_PATCH_VERSION})

SET(PYTHON_EXE "python" CACHE STRING "Executable of Python.")

SET(GLLOADER_PROJECT_DIR "${CMAKE_HOME_DIRECTORY}/../../")

INCLUDE(${GLLOADER_PROJECT_DIR}/../cmake/Common.cmake)
INCLUDE(${GLLOADER_PROJECT_DIR}/../cmake/Platform.cmake)
INCLUDE(${GLLOADER_PROJECT_DIR}/../cmake/Compiler.cmake)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

IF(WIN32)
	IF(MSVC)
		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4055")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4055")
	ENDIF()
	SET(OPENGL_LIBRARIES "opengl32")
ELSE()
	SET(OPENGL_LIBRARIES "MesaGL")
ENDIF()

SET(GLLOADER_OUTPUT_DIR "${CMAKE_HOME_DIRECTORY}/../../lib/${KLAYGE_PLATFORM_NAME}" )
SET(KLAYGE_BIN_DIR "${CMAKE_HOME_DIRECTORY}/../../../KlayGE/bin/${KLAYGE_PLATFORM_NAME}" )


EXECUTE_PROCESS(COMMAND "${PYTHON_EXE}" "${GLLOADER_PROJECT_DIR}autogen.py" "-q")

ADD_CUSTOM_COMMAND(OUTPUT ${GLLOADER_PROJECT_DIR}/src/glloader_gl.c
	COMMAND "${GLLOADER_PROJECT_DIR}autogen.py" "-q")
ADD_CUSTOM_TARGET(autogen ALL DEPENDS ${GLLOADER_PROJECT_DIR}/src/glloader_gl.c)


# The project settings

SET(LIB_NAME glloader)
OPTION(GLLOADER_USE_GLES "Set to ON to use OpenGL ES to build glloader" OFF)
SET(GLLOADER_GLES_SDK_PATH "" CACHE STRING "Path of OpenGL ES SDK.")

SET(GLLOADER_SOURCE_FILES
	${GLLOADER_PROJECT_DIR}/src/glloader_egl.c
	${GLLOADER_PROJECT_DIR}/src/glloader_gl.c
	${GLLOADER_PROJECT_DIR}/src/glloader_gles.c
	${GLLOADER_PROJECT_DIR}/src/glloader_glx.c
	${GLLOADER_PROJECT_DIR}/src/glloader_wgl.c
	${GLLOADER_PROJECT_DIR}/src/utils.cpp
)
SET(GLLOADER_INCLUDE_FILES
	${GLLOADER_PROJECT_DIR}/include/glloader/glloader.h
	${GLLOADER_PROJECT_DIR}/include/glloader/glloader_egl.h
	${GLLOADER_PROJECT_DIR}/include/glloader/glloader_gl.h
	${GLLOADER_PROJECT_DIR}/include/glloader/glloader_gles.h
	${GLLOADER_PROJECT_DIR}/include/glloader/glloader_glx.h
	${GLLOADER_PROJECT_DIR}/include/glloader/glloader_wgl.h
)
SET(GLLOADER_HEADER_FILES
	${GLLOADER_PROJECT_DIR}/src/utils.h
)
SOURCE_GROUP("Source Files" FILES ${GLLOADER_SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${GLLOADER_HEADER_FILES})
SOURCE_GROUP("Include Files" FILES ${GLLOADER_INCLUDE_FILES})

ADD_DEFINITIONS(-DGLLOADER_SOURCE)
IF(GLLOADER_USE_GLES)
	ADD_DEFINITIONS(-DGLLOADER_GLES_SUPPORT)
ENDIF()

IF(GLLOADER_USE_GLES)
	INCLUDE_DIRECTORIES(${GLLOADER_GLES_SDK_PATH}/include)
ENDIF()
INCLUDE_DIRECTORIES(../../include)
ADD_LIBRARY(${LIB_NAME} SHARED
	${GLLOADER_SOURCE_FILES} ${GLLOADER_HEADER_FILES} ${GLLOADER_INCLUDE_FILES}
)

IF(GLLOADER_USE_GLES)
	SET(LIB_OUTPUT_NAME ${LIB_NAME}_es_${KLAYGE_COMPILER_NAME}_${KLAYGE_ARCH_NAME})
ELSE()
	SET(LIB_OUTPUT_NAME ${LIB_NAME}_${KLAYGE_COMPILER_NAME}_${KLAYGE_ARCH_NAME})
ENDIF()

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${GLLOADER_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${GLLOADER_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${GLLOADER_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${GLLOADER_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${GLLOADER_OUTPUT_DIR}
	PROJECT_LABEL ${LIB_NAME}
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME ${LIB_OUTPUT_NAME}
)

ADD_DEPENDENCIES(${LIB_NAME} autogen)

TARGET_LINK_LIBRARIES(${LIB_NAME} ${OPENGL_LIBRARIES})


ADD_POST_BUILD(${LIB_NAME} "")


INSTALL(TARGETS ${LIB_NAME}
	RUNTIME DESTINATION ${KLAYGE_BIN_DIR}
	LIBRARY DESTINATION ${KLAYGE_BIN_DIR}
	ARCHIVE DESTINATION ${GLLOADER_OUTPUT_DIR}
)
